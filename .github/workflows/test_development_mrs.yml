# This is a basic workflow to help you get started with Actions

name: Tests on production branches

on:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-and-test:

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Build and tag image
        run: docker build -t mrs-tarquin:latest .

      - name: Setup flake8 annotations
        uses: rbialon/flake8-annotations@v1

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          docker run --mount type=bind,source=$(pwd),target=/mrs mrs-tarquin flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          docker run --mount type=bind,source=$(pwd),target=/mrs mrs-tarquin flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: run tests
        run: docker run --mount type=bind,source=$(pwd),target=/mrs mrs-tarquin pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=mrs --continue-on-collection-errors tests/ | tee pytest-coverage.txt ; echo $?

      - name: report coverage
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest.xml
